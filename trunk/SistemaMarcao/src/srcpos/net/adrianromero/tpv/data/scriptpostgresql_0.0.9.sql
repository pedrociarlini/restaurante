--    Tina POS is a point of sales application designed for touch screens.
--    Copyright (C) 2005 Adrián Romero Corchado.
--    http://sourceforge.net/projects/tinapos
--
--    This program is free software; you can redistribute it and/or modify
--    it under the terms of the GNU General Public License as published by
--    the Free Software Foundation; either version 2 of the License, or
--    (at your option) any later version.
--
--    This program is distributed in the hope that it will be useful,
--    but WITHOUT ANY WARRANTY; without even the implied warranty of
--    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--    GNU General Public License for more details.
--
--    You should have received a copy of the GNU General Public License
--    along with this program; if not, write to the Free Software
--    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

-- Tina POS Database upgrade script for Postgresql from version 0.0.9 to 0.0.15
-- v1.0

UPDATE TINAPOS SET VERSION = '0.0.15';

INSERT INTO RESOURCES VALUES('Printer.Ticket2', 0, $FILE{/net/adrianromero/templates/printerticket2.xml});

ALTER TABLE PRODUCTS_CAT ADD COLUMN CATORDER INTEGER NOT NULL DEFAULT 0;
ALTER TABLE PRODUCTS_CAT ALTER COLUMN CATORDER DROP DEFAULT;
CREATE INDEX PRODUCTS_CAT_INX_1 ON PRODUCTS_CAT(CATORDER);

DROP TABLE CLOSEDCASH;
DROP SEQUENCE CLOSEDCASHNUM;
DROP TABLE PRODUCTSOUT;
DROP TABLE TICKETS;
DROP SEQUENCE TICKETSNUM;

CREATE TABLE CLOSEDCASH (
    MONEY INTEGER NOT NULL,
    HOST VARCHAR NOT NULL,
    DATESTART TIMESTAMP NOT NULL,
    DATEEND TIMESTAMP,
    PRIMARY KEY(MONEY)
);
CREATE INDEX CLOSEDCASH_INX_1 ON CLOSEDCASH(DATESTART);
CREATE SEQUENCE CLOSEDCASHNUM;

CREATE TABLE TICKETS (
    TICKETID INTEGER NOT NULL,
    DATENEW TIMESTAMP NOT NULL,
    MONEY INTEGER NOT NULL,
    PERSON VARCHAR NOT NULL,
    PRIMARY KEY (TICKETID),
    CONSTRAINT TICKETS_FK_1 FOREIGN KEY (MONEY) REFERENCES CLOSEDCASH(MONEY),
    CONSTRAINT TICKETS_FK_2 FOREIGN KEY (PERSON) REFERENCES PEOPLE(NAME)
);
CREATE INDEX TICKETS_INX_1 ON TICKETS(DATENEW);
CREATE SEQUENCE TICKETSNUM;

CREATE TABLE PRODUCTSOUT (
    TICKETID INTEGER NOT NULL,
    TICKETLINE INTEGER NOT NULL,
    PRODUCT VARCHAR,
    UNITS DOUBLE PRECISION NOT NULL,
    PRICE DOUBLE PRECISION NOT NULL,
    TAXRATE DOUBLE PRECISION,
    PRIMARY KEY (TICKETID, TICKETLINE),
    CONSTRAINT PRODUCTSOUT_FK_1 FOREIGN KEY (TICKETID) REFERENCES TICKETS(TICKETID),
    CONSTRAINT PRODUCTSOUT_FK_2 FOREIGN KEY (PRODUCT) REFERENCES PRODUCTS(REFERENCE)
);

CREATE TABLE PAYMENTS (
    ID INTEGER NOT NULL,
    DATENEW TIMESTAMP NOT NULL,
    MONEY INTEGER NOT NULL,
    PAYMENT VARCHAR NOT NULL,
    TOTAL DOUBLE PRECISION NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT PAYMENTS_FK_1 FOREIGN KEY (MONEY) REFERENCES CLOSEDCASH(MONEY)
);
CREATE INDEX PAYMENTS_INX_1 ON PAYMENTS(PAYMENT);
CREATE INDEX PAYMENTS_INX_2 ON PAYMENTS(DATENEW);
CREATE SEQUENCE PAYMENTSNUM;
