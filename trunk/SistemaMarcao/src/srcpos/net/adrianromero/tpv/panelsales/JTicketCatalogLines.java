//    Tina POS is a point of sales application designed for touch screens.
//    Copyright (C) 2005 Adrian Romero Corchado.
//    http://sourceforge.net/projects/tinapos
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

package net.adrianromero.tpv.panelsales;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.util.List;
import net.adrianromero.tpv.forms.AppView;
import net.adrianromero.tpv.panels.JCatalog;

public class JTicketCatalogLines extends javax.swing.JPanel {
    
    private JRefundLines m_reflines;
    private JCatalog m_catalog;
    
    /** Creates new form JTicketCatalogLines */
    public JTicketCatalogLines(AppView oApp, JPanelTicketEdits jTicketEdit) {
        initComponents();
        
        m_reflines = new JRefundLines(oApp, jTicketEdit);        
        add(m_reflines, "reflines");
        
        m_catalog = new JCatalog(oApp);
        // m_catalog.addActionListener(new CatalogListener());        
        add(m_catalog, "catalog");
    }
    
    public void showCatalog() {
        showView("catalog");
    }
//    
//    public void showRefundLines() {
//        showView("reflines");
//    }
    
    public void loadCatalog() {
        m_catalog.loadCatalog();
    }
    
    public void addActionListener(ActionListener l) {
        m_catalog.addActionListener(l);
    }
    public void removeActionListener(ActionListener l) {
        m_catalog.addActionListener(l);
    }
    
    public void loadProduct(String reference) {
        m_catalog.loadProduct(reference);
    }
    
    public void showRefundLines(List aRefundLines) {
        // anado las lineas de refund
        m_reflines.setLines(aRefundLines);
        showView("reflines");
    }   
    
    private void showView(String sView) {
        CardLayout cl = (CardLayout)(this.getLayout());
        cl.show(this, sView);       
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.CardLayout());

    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
